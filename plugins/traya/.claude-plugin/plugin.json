{
  "name": "traya",
  "version": "1.0.0",
  "description": "AI-powered development tools that get smarter with every use. Make each unit of engineering work easier than the last. Includes 17 specialized agents and 6 commands.",
  "author": {
    "name": "Shivraj Kumar",
    "email": "shivrajkumar@traya.health",
    "url": "https://github.com/shivrajkumar"
  },
  "homepage": "https://github.com/shivrajkumar/traya-marketplace",
  "repository": "https://github.com/shivrajkumar/traya-marketplace",
  "license": "MIT",
  "keywords": [
    "ai-powered",
    "traya",
    "workflow-automation",
    "code-review",
    "quality",
    "knowledge-management"
  ],
  "mcpServers": [
    {
      "id": "figma",
      "name": "Figma MCP Server",
      "description": "Extract designs, design tokens, and generate code from Figma designs",
      "install": {
        "type": "desktop-app",
        "instructions": "Install Figma Desktop App and enable MCP server in Preferences",
        "url": "http://127.0.0.1:3845/mcp",
        "requiredApp": "Figma Desktop",
        "downloadUrl": "https://www.figma.com/downloads/"
      },
      "capabilities": [
        "get_code",
        "get_variable_defs",
        "get_code_connect_map",
        "get_image",
        "create_design_system_rules"
      ],
      "required": true
    },
    {
      "id": "chrome-devtools",
      "name": "Chrome DevTools MCP Server",
      "description": "Browser automation, visual testing, console debugging, and performance analysis",
      "install": {
        "type": "npm",
        "command": "claude mcp add chrome-devtools -- npx @executeautomation/chrome-devtools-mcp",
        "verify": "claude mcp test chrome-devtools"
      },
      "capabilities": [
        "screenshot",
        "navigate",
        "console_logs",
        "network_monitor",
        "performance_metrics",
        "accessibility_audit",
        "lighthouse_report"
      ],
      "required": true
    },
    {
      "id": "context7",
      "name": "Context7 MCP Server",
      "description": "Access latest library documentation and best practices",
      "install": {
        "type": "npm",
        "command": "claude mcp add context7 -- npx -y @upstash/context7-mcp",
        "verify": "claude mcp test context7"
      },
      "capabilities": [
        "search_documentation",
        "get_latest_patterns",
        "library_examples",
        "framework_guides"
      ],
      "required": true
    },
    {
      "id": "serena",
      "name": "Serena MCP Server",
      "description": "Semantic code analysis and symbol-level operations for efficient codebase understanding",
      "install": {
        "type": "python",
        "command": "claude mcp add serena -- uvx --from git+https://github.com/oraios/serena serena start-mcp-server --context ide-assistant --project $(pwd)",
        "postInstall": "uvx --from git+https://github.com/oraios/serena serena project index",
        "verify": "uvx serena status"
      },
      "capabilities": [
        "semantic_search",
        "symbol_analysis",
        "code_context",
        "component_discovery"
      ],
      "required": true
    },
    {
      "id": "postman",
      "name": "Postman MCP Server",
      "description": "API design, testing, and validation",
      "install": {
        "type": "npm",
        "command": "claude mcp add postman -- npx @postman/mcp-server",
        "verify": "claude mcp test postman",
        "optional": {
          "apiKey": {
            "description": "Postman API key for cloud features (optional)",
            "command": "postman login"
          }
        }
      },
      "capabilities": [
        "create_collection",
        "test_endpoint",
        "run_collection",
        "validate_schema",
        "performance_test"
      ],
      "required": true
    }
  ]
}
